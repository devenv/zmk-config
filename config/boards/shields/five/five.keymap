/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


#define DFLT      0
#define SYMBOLS   1
#define EXTRA     2
#define SYSTEM    3
#define GAMING    4


/ { 
    behaviors {
        lhm: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            #hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;

        };
        rhm: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            #hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
            layers = <DFLT SYMBOLS EXTRA SYSTEM>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
            layers = <DFLT SYMBOLS EXTRA SYSTEM>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp ENTER>;
            layers = <DFLT SYMBOLS EXTRA SYSTEM GAMING>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &lhm LALT Q     &kp W           &kp E           &kp R           &kp T               &kp Y           &kp U           &kp I           &kp O           &rhm LALT P
                &lhm LSHIFT A   &kp S           &kp D           &kp F           &kp G               &kp H           &kp J           &kp K           &kp L           &rhm LSHIFT SQT
                &lhm LCTRL Z    &lhm LGUI X     &kp C           &kp V           &kp B               &kp N           &kp M           &kp COMMA       &rhm LGUI DOT   &rhm LCTRL SLASH
                                                                &mo EXTRA       &lt SYMBOLS SPACE   &kp BACKSPACE   &mo EXTRA
            >;
        };

        symbols_layer {
            bindings = <
                &kp EXCL        &kp AT          &kp HASH        &kp DOLLAR      &kp PERCENT         &kp CARET       &kp N7          &kp N8          &kp N9          &rhm LALT MINUS
                &lhm LSHIFT GRAVE &kp EQUAL     &kp UNDER       &kp COLON       &kp LPAR            &kp RPAR        &kp N4          &kp N5          &kp N6          &rhm LSHIFT N0
                &kp BACKSLASH   &lhm LGUI AMPS  &kp STAR        &kp SEMI        &kp LBKT            &kp RBKT        &kp N1          &kp N2          &rhm LGUI N3    &rhm LCTRL DOT
                                                                &kp DELETE      &trans              &trans          &kp LC(LS(LA(LGUI)))
            >;
        };

        extra_layer {
            bindings = <
                &lhm LALT LC(N1) &kp LC(N2)     &kp LC(N3)      &kp LC(N4)      &mo SYSTEM          &kp INSERT      &kp HOME        &kp END         &sk PAGE_UP     &kp PSCRN
                &kp LSHIFT      &kp TAB         &kp ENTER       &kp ESCAPE      &trans              &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp LSHIFT
                &kp LCTRL       &kp LGUI        &kp LC(Z)       &kp C_PP        &kp C_NEXT          &trans          &kp ESCAPE      &kp ENTER       &kp TAB         &kp PAGE_DOWN   
                                                                &kp LC(LS(LA(LGUI))) &to GAMING     &trans          &kp LC(LS(LA(LGUI)))
            >;
        };

        system_layer {
            bindings = <
                &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &trans             &trans           &kp F1          &kp F2          &kp F3          &kp F10
                &trans          &out OUT_USB    &out OUT_BLE    &trans          &reset             &trans           &kp F4          &kp F5          &kp F6          &kp F11
                &bootloader     &bt BT_CLR      &trans          &trans          &trans             &trans           &kp F7          &kp F8          &kp F9          &kp F12
                                                                &trans          &trans             &trans           &trans

            >;
        };

        gaming_layer {
            bindings = <
                &kp TAB         &kp Q           &kp W           &kp E           &kp R            &kp T              &kp N7          &kp N8          &kp N9          &kp MINUS
                &kp LSHIFT      &kp A           &kp S           &kp D           &kp F            &kp G              &kp N4          &kp N5          &kp N6          &kp N0
                &kp LALT        &kp Z           &kp X           &kp C           &kp V            &kp B              &kp N1          &kp N2          &kp N3          &kp DOT
                                                                &kp LCTRL       &kp SPACE        &to DFLT           &trans
            >;
        };

/*
        trans_layer {
            bindings = <
                &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                                                                &trans          &trans          &trans          &trans
            >;
        };
*/
    };
};
