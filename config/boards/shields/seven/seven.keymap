/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


#define DFLT      0
#define SYMBOLS   1
#define EXTRA     2
#define GAMING    3
#define LNUM      4
#define SYSTEM    5


/ {
    behaviors {
        hpl: hold_preferred_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };
        bpl: balanced_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
        tpl: tap_preferred_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_REFERRED_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        hpm: hold_preferred_modifier {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED_MODIFIER";
            #binding-cells = <2>;
            tapping-term-ms = <130>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        bpm: balanced_modifier {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_MODIFIER";
            #binding-cells = <2>;
            tapping-term-ms = <130>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        tpm: tap_preferred_modifier {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_REFERRED_MODIFIER";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_print_screen_r_t {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp LC(LS(S))>;
            layers = <EXTRA>;
        };
        combo_print_screen_e_r {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp PRINTSCREEN>;
            layers = <EXTRA>;
        };
        combo_caps_word_a_s {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&caps_word>;
            layers = <DFLT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q             &kp W           &kp E            &kp R           &kp T               &kp Y         &kp U        &kp I            &kp O         &kp P
                &bpm LSHIFT A     &tpm LCTRL S    &tpm LCTRL D     &tpm LALT F     &tpm LGUI G         &kp H         &kp J        &kp K            &kp L         &bpm LSHIFT SQT
                &tpm LCTRL Z      &kp X           &kp C            &kp V           &kp B               &kp N         &kp M        &kp COMMA        &kp DOT       &kp SLASH
                                                  &hpl EXTRA ESCAPE &hpl SYMBOLS SPACE &tpl LNUM TAB   &kp BACKSPACE &kp LALT   &mo EXTRA
            >;
        };

        symbols_layer {
            bindings = <
                &tpm LALT EXCL    &kp AT          &kp HASH         &kp DOLLAR       &kp PERCENT        &kp CARET     &kp N7       &kp N8           &kp N9        &kp MINUS
                &bpm LSHIFT GRAVE &tpm LCTRL EQUAL &tpm LCTRL UNDER &tpm LALT COLON &tpm LGUI LPAR     &kp RPAR      &kp N4       &kp N5           &kp N6        &bpm LSHIFT N0
                &kp BACKSLASH     &kp AMPS        &kp STAR         &kp SEMI         &kp LBKT           &kp RBKT      &kp N1       &kp N2           &kp N3        &kp DOT
                                                  &trans           &trans           &trans             &trans        &trans       &kp DEL
            >;
        };
 
        extra_layer {
            bindings = <
                &tpm LALT LA(N1)  &kp LA(N2)      &kp LA(N3)       &kp LA(N4)       &tpl SYSTEM LA(N5) &kp INSERT    &kp HOME     &kp END          &sk PAGE_UP   &kp PAGE_UP
                &bpm LSHIFT K_BACK &tpm LCTRL TAB &tpm LCTRL ENTER &tpm LALT ESCAPE &kp LC(ENTER)      &kp LEFT      &kp DOWN     &kp UP           &kp RIGHT     &kp LSHIFT
                &kp K_FORWARD     &kp C_VOL_DN    &kp C_VOL_UP     &kp C_PP         &kp C_NEXT         &trans        &trans       &trans           &trans        &trans
                                                  &trans           &trans           &to GAMING         &trans        &trans       &kp DEL
            >;
        };

        gaming_layer {
            bindings = <
                &kp TAB           &kp Q           &kp W            &kp E            &kp R              &kp T         &kp N7       &kp N8           &kp N9        &kp MINUS
                &kp LSHIFT        &kp A           &kp S            &kp D            &kp F              &kp G         &kp N4       &kp N5           &kp N6        &kp N0
                &kp LALT          &kp Z           &kp X            &kp C            &kp V              &kp B         &kp N1       &kp N2           &kp N3        &kp DOT
                                                  &kp LCTRL        &kp SPACE        &mo LNUM           &to DFLT      &trans       &kp DEL
            >;
        };

        left_num_layer {
            bindings = <
                &kp LEFT          &kp N1           &kp N2          &kp N3           &kp RIGHT         &trans         &trans       &trans          &trans         &trans
                &kp UP            &kp N4           &kp N5          &kp N6           &kp N0            &trans         &trans       &trans          &kp LSHIFT     &trans
                &kp DOWN          &kp N7           &kp N8          &kp N9           &kp MINUS         &trans         &trans       &trans          &trans         &trans
                                                   &to DFLT        &trans           &kp DOT           &kp BACKSPACE  &trans       &trans
            >;
        };

        system_layer {
            bindings = <
                &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3     &trans             &trans        &kp F1       &kp F2          &kp F3         &kp F10
                &trans            &out OUT_USB    &out OUT_BLE     &trans           &sys_reset         &trans        &kp F4       &kp F5          &kp F6         &kp F11
                &bootloader       &bt BT_CLR      &trans           &trans           &trans             &trans        &kp F7       &kp F8          &kp F9         &kp F12
                                                  &trans           &trans           &trans             &trans        &trans       &bootloader

            >;
        };
    };
};
